searchData={"items":[{"type":"module","title":"Soundboard","doc":"Soundboard keeps the contexts that define your domain\nand business logic.\n\nContexts are also responsible for managing your data, regardless\nif it comes from the database, an external API or others.","ref":"Soundboard.html"},{"type":"function","title":"Soundboard.app_name/0","doc":"Returns the application name.","ref":"Soundboard.html#app_name/0"},{"type":"module","title":"Soundboard.Accounts.ApiToken","doc":"API access token bound to a user. Stores only a SHA-256 hash of the token.","ref":"Soundboard.Accounts.ApiToken.html"},{"type":"function","title":"Soundboard.Accounts.ApiToken.changeset/2","doc":"","ref":"Soundboard.Accounts.ApiToken.html#changeset/2"},{"type":"module","title":"Soundboard.Accounts.ApiTokens","doc":"Context for managing API tokens bound to users.","ref":"Soundboard.Accounts.ApiTokens.html"},{"type":"function","title":"Soundboard.Accounts.ApiTokens.generate_token/2","doc":"","ref":"Soundboard.Accounts.ApiTokens.html#generate_token/2"},{"type":"function","title":"Soundboard.Accounts.ApiTokens.list_tokens/1","doc":"","ref":"Soundboard.Accounts.ApiTokens.html#list_tokens/1"},{"type":"function","title":"Soundboard.Accounts.ApiTokens.revoke_token/2","doc":"","ref":"Soundboard.Accounts.ApiTokens.html#revoke_token/2"},{"type":"function","title":"Soundboard.Accounts.ApiTokens.verify_token/1","doc":"","ref":"Soundboard.Accounts.ApiTokens.html#verify_token/1"},{"type":"module","title":"Soundboard.Accounts.User","doc":"The User module.","ref":"Soundboard.Accounts.User.html"},{"type":"function","title":"Soundboard.Accounts.User.changeset/2","doc":"","ref":"Soundboard.Accounts.User.html#changeset/2"},{"type":"module","title":"Soundboard.Favorites","doc":"The Favorites module.","ref":"Soundboard.Favorites.html"},{"type":"function","title":"Soundboard.Favorites.favorite?/2","doc":"","ref":"Soundboard.Favorites.html#favorite?/2"},{"type":"function","title":"Soundboard.Favorites.list_favorites/1","doc":"","ref":"Soundboard.Favorites.html#list_favorites/1"},{"type":"function","title":"Soundboard.Favorites.max_favorites/0","doc":"","ref":"Soundboard.Favorites.html#max_favorites/0"},{"type":"function","title":"Soundboard.Favorites.toggle_favorite/2","doc":"","ref":"Soundboard.Favorites.html#toggle_favorite/2"},{"type":"module","title":"Soundboard.Favorites.Favorite","doc":"The Favorite module.","ref":"Soundboard.Favorites.Favorite.html"},{"type":"function","title":"Soundboard.Favorites.Favorite.changeset/2","doc":"","ref":"Soundboard.Favorites.Favorite.html#changeset/2"},{"type":"module","title":"Soundboard.Repo","doc":"","ref":"Soundboard.Repo.html"},{"type":"function","title":"Soundboard.Repo.aggregate/3","doc":"Callback implementation for  Ecto.Repo.aggregate/3 .","ref":"Soundboard.Repo.html#aggregate/3"},{"type":"function","title":"Soundboard.Repo.aggregate/4","doc":"Callback implementation for  Ecto.Repo.aggregate/4 .","ref":"Soundboard.Repo.html#aggregate/4"},{"type":"function","title":"Soundboard.Repo.all/2","doc":"Callback implementation for  Ecto.Repo.all/2 .","ref":"Soundboard.Repo.html#all/2"},{"type":"function","title":"Soundboard.Repo.all_by/3","doc":"Callback implementation for  Ecto.Repo.all_by/3 .","ref":"Soundboard.Repo.html#all_by/3"},{"type":"function","title":"Soundboard.Repo.checked_out?/0","doc":"Callback implementation for  Ecto.Repo.checked_out?/0 .","ref":"Soundboard.Repo.html#checked_out?/0"},{"type":"function","title":"Soundboard.Repo.checkout/2","doc":"Callback implementation for  Ecto.Repo.checkout/2 .","ref":"Soundboard.Repo.html#checkout/2"},{"type":"function","title":"Soundboard.Repo.child_spec/1","doc":"","ref":"Soundboard.Repo.html#child_spec/1"},{"type":"function","title":"Soundboard.Repo.config/0","doc":"Callback implementation for  Ecto.Repo.config/0 .","ref":"Soundboard.Repo.html#config/0"},{"type":"function","title":"Soundboard.Repo.default_options/1","doc":"Callback implementation for  Ecto.Repo.default_options/1 .","ref":"Soundboard.Repo.html#default_options/1"},{"type":"function","title":"Soundboard.Repo.delete/2","doc":"Callback implementation for  Ecto.Repo.delete/2 .","ref":"Soundboard.Repo.html#delete/2"},{"type":"function","title":"Soundboard.Repo.delete!/2","doc":"Callback implementation for  Ecto.Repo.delete!/2 .","ref":"Soundboard.Repo.html#delete!/2"},{"type":"function","title":"Soundboard.Repo.delete_all/2","doc":"Callback implementation for  Ecto.Repo.delete_all/2 .","ref":"Soundboard.Repo.html#delete_all/2"},{"type":"function","title":"Soundboard.Repo.disconnect_all/2","doc":"Forces all connections in the repo pool to disconnect within the given interval.\n\nOnce this function is called, the pool will disconnect all of its connections\nas they are checked in or as they are pinged. Checked in connections will be\nrandomly disconnected within the given time interval. Pinged connections are\nimmediately disconnected - as they are idle (according to `:idle_interval`).\n\nIf the connection has a backoff configured (which is the case by default),\ndisconnecting means an attempt at a new connection will be done immediately\nafter, without starting a new process for each connection. However, if backoff\nhas been disabled, the connection process will terminate. In such cases,\ndisconnecting all connections may cause the pool supervisor to restart\ndepending on the max_restarts/max_seconds configuration of the pool,\nso you will want to set those carefully.","ref":"Soundboard.Repo.html#disconnect_all/2"},{"type":"function","title":"Soundboard.Repo.exists?/2","doc":"Callback implementation for  Ecto.Repo.exists?/2 .","ref":"Soundboard.Repo.html#exists?/2"},{"type":"function","title":"Soundboard.Repo.explain/3","doc":"Executes an EXPLAIN statement or similar for the given query according to its kind and the\nadapter in the given repository.","ref":"Soundboard.Repo.html#explain/3"},{"type":"function","title":"Examples - Soundboard.Repo.explain/3","doc":"# Postgres\n    iex> MyRepo.explain(:all, Post)\n    \"Seq Scan on posts p0  (cost=0.00..12.12 rows=1 width=443)\"\n\n    iex> Ecto.Adapters.SQL.explain(Repo, :all, Post)\n    \"Seq Scan on posts p0  (cost=0.00..12.12 rows=1 width=443)\"\n\n    # MySQL\n    iex> MyRepo.explain(:all, from(p in Post, where: p.title == \"title\")) |> IO.puts()\n    +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+\n    | id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |\n    +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+\n    |  1 | SIMPLE      | p0    | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    1 |    100.0 | Using where |\n    +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+\n\n    # Shared opts\n    iex> MyRepo.explain(:all, Post, analyze: true, timeout: 20_000)\n    \"Seq Scan on posts p0  (cost=0.00..11.70 rows=170 width=443) (actual time=0.013..0.013 rows=0 loops=1)\\nPlanning Time: 0.031 ms\\nExecution Time: 0.021 ms\"\n\nIt's safe to execute it for updates and deletes, no data change will be committed:\n\n    iex> MyRepo.explain(Repo, :update_all, from(p in Post, update: [set: [title: \"new title\"]]))\n    \"Update on posts p0  (cost=0.00..11.70 rows=170 width=449)\\n  ->  Seq Scan on posts p0  (cost=0.00..11.70 rows=170 width=449)\"\n\nThis function is also available under the repository with name `explain`:\n\n    iex> MyRepo.explain(:all, from(p in Post, where: p.title == \"title\"))\n    \"Seq Scan on posts p0  (cost=0.00..12.12 rows=1 width=443)\\n  Filter: ((title)::text = 'title'::text)\"","ref":"Soundboard.Repo.html#explain/3-examples"},{"type":"function","title":"Options - Soundboard.Repo.explain/3","doc":"Built-in adapters support passing `opts` to the EXPLAIN statement according to the following:\n\nAdapter          | Supported opts\n---------------- | --------------\nPostgrex         | `analyze`, `verbose`, `costs`, `settings`, `buffers`, `timing`, `summary`, `format`, `plan`\nMyXQL            | `format`\n\nAll options except `format` are boolean valued and default to `false`.\n\nThe allowed `format` values are `:map`, `:yaml`, and `:text`:\n  * `:map` is the deserialized JSON encoding.\n  * `:yaml` and `:text` return the result as a string.\n\nThe built-in adapters support the following formats:\n  * Postgrex: `:map`, `:yaml` and `:text`\n  * MyXQL: `:map` and `:text`\n\nThe `:plan` option in Postgrex can take the values `:custom` or `:fallback_generic`. When `:custom`\nis specified, the explain plan generated will consider the specific values of the query parameters\nthat are supplied. When using `:fallback_generic`, the specific values of the query parameters will\nbe ignored. `:fallback_generic` does not use PostgreSQL's built-in support for a generic explain\nplan (available as of PostgreSQL 16), but instead uses a special implementation that works for PostgreSQL\nversions 12 and above. Defaults to `:custom`.\n\nAny other value passed to `opts` will be forwarded to the underlying adapter query function, including\nshared Repo options such as `:timeout`. Non built-in adapters may have specific behaviour and you should\nconsult their documentation for more details.\n\nFor version compatibility, please check your database's documentation:\n\n  * _Postgrex_: [PostgreSQL doc](https://www.postgresql.org/docs/current/sql-explain.html).\n  * _MyXQL_: [MySQL doc](https://dev.mysql.com/doc/refman/8.0/en/explain.html).","ref":"Soundboard.Repo.html#explain/3-options"},{"type":"function","title":"Soundboard.Repo.get/3","doc":"Callback implementation for  Ecto.Repo.get/3 .","ref":"Soundboard.Repo.html#get/3"},{"type":"function","title":"Soundboard.Repo.get!/3","doc":"Callback implementation for  Ecto.Repo.get!/3 .","ref":"Soundboard.Repo.html#get!/3"},{"type":"function","title":"Soundboard.Repo.get_by/3","doc":"Callback implementation for  Ecto.Repo.get_by/3 .","ref":"Soundboard.Repo.html#get_by/3"},{"type":"function","title":"Soundboard.Repo.get_by!/3","doc":"Callback implementation for  Ecto.Repo.get_by!/3 .","ref":"Soundboard.Repo.html#get_by!/3"},{"type":"function","title":"Soundboard.Repo.get_dynamic_repo/0","doc":"Callback implementation for  Ecto.Repo.get_dynamic_repo/0 .","ref":"Soundboard.Repo.html#get_dynamic_repo/0"},{"type":"function","title":"Soundboard.Repo.in_transaction?/0","doc":"Callback implementation for  Ecto.Repo.in_transaction?/0 .","ref":"Soundboard.Repo.html#in_transaction?/0"},{"type":"function","title":"Soundboard.Repo.insert/2","doc":"Callback implementation for  Ecto.Repo.insert/2 .","ref":"Soundboard.Repo.html#insert/2"},{"type":"function","title":"Soundboard.Repo.insert!/2","doc":"Callback implementation for  Ecto.Repo.insert!/2 .","ref":"Soundboard.Repo.html#insert!/2"},{"type":"function","title":"Soundboard.Repo.insert_all/3","doc":"Callback implementation for  Ecto.Repo.insert_all/3 .","ref":"Soundboard.Repo.html#insert_all/3"},{"type":"function","title":"Soundboard.Repo.insert_or_update/2","doc":"Callback implementation for  Ecto.Repo.insert_or_update/2 .","ref":"Soundboard.Repo.html#insert_or_update/2"},{"type":"function","title":"Soundboard.Repo.insert_or_update!/2","doc":"Callback implementation for  Ecto.Repo.insert_or_update!/2 .","ref":"Soundboard.Repo.html#insert_or_update!/2"},{"type":"function","title":"Soundboard.Repo.load/2","doc":"Callback implementation for  Ecto.Repo.load/2 .","ref":"Soundboard.Repo.html#load/2"},{"type":"function","title":"Soundboard.Repo.one/2","doc":"Callback implementation for  Ecto.Repo.one/2 .","ref":"Soundboard.Repo.html#one/2"},{"type":"function","title":"Soundboard.Repo.one!/2","doc":"Callback implementation for  Ecto.Repo.one!/2 .","ref":"Soundboard.Repo.html#one!/2"},{"type":"function","title":"Soundboard.Repo.preload/3","doc":"Callback implementation for  Ecto.Repo.preload/3 .","ref":"Soundboard.Repo.html#preload/3"},{"type":"function","title":"Soundboard.Repo.prepare_query/3","doc":"Callback implementation for  Ecto.Repo.prepare_query/3 .","ref":"Soundboard.Repo.html#prepare_query/3"},{"type":"function","title":"Soundboard.Repo.prepare_transaction/2","doc":"Callback implementation for  Ecto.Repo.prepare_transaction/2 .","ref":"Soundboard.Repo.html#prepare_transaction/2"},{"type":"function","title":"Soundboard.Repo.put_dynamic_repo/1","doc":"Callback implementation for  Ecto.Repo.put_dynamic_repo/1 .","ref":"Soundboard.Repo.html#put_dynamic_repo/1"},{"type":"function","title":"Soundboard.Repo.query/3","doc":"Runs a custom SQL query.\n\nIf the query was successful, it will return an `:ok` tuple containing\na map with at least two keys:\n  * `:num_rows` - the number of rows affected\n  * `:rows` - the result set as a list. `nil` may be returned\n    instead of the list if the command does not yield any row\n    as result (but still yields the number of affected rows,\n    like a `delete` command without returning would)","ref":"Soundboard.Repo.html#query/3"},{"type":"function","title":"Options - Soundboard.Repo.query/3","doc":"* `:log` - When false, does not log the query\n  * `:timeout` - Execute request timeout, accepts: `:infinity` (default: `15000`);","ref":"Soundboard.Repo.html#query/3-options"},{"type":"function","title":"Examples - Soundboard.Repo.query/3","doc":"iex> MyRepo.query(\"SELECT $1::integer + $2\", [40, 2])\n    {:ok, %{rows: [[42]], num_rows: 1}}\n\n    iex> Ecto.Adapters.SQL.query(MyRepo, \"SELECT $1::integer + $2\", [40, 2])\n    {:ok, %{rows: [[42]], num_rows: 1}}","ref":"Soundboard.Repo.html#query/3-examples"},{"type":"function","title":"Soundboard.Repo.query!/3","doc":"Same as `query/3` but returns result directly without `:ok` tuple\nand raises on invalid queries","ref":"Soundboard.Repo.html#query!/3"},{"type":"function","title":"Soundboard.Repo.query_many/3","doc":"Runs a custom SQL query that returns multiple results on the given repo.\n\nIn case of success, it must return an `:ok` tuple containing a list of\nmaps with at least two keys:\n\n  * `:num_rows` - the number of rows affected\n\n  * `:rows` - the result set as a list. `nil` may be returned\n    instead of the list if the command does not yield any row\n    as result (but still yields the number of affected rows,\n    like a `delete` command without returning would)","ref":"Soundboard.Repo.html#query_many/3"},{"type":"function","title":"Options - Soundboard.Repo.query_many/3","doc":"* `:log` - When false, does not log the query\n  * `:timeout` - Execute request timeout, accepts: `:infinity` (default: `15000`);","ref":"Soundboard.Repo.html#query_many/3-options"},{"type":"function","title":"Examples - Soundboard.Repo.query_many/3","doc":"iex> MyRepo.query_many(\"SELECT $1; SELECT $2;\", [40, 2])\n    {:ok, [%{rows: [[40]], num_rows: 1}, %{rows: [[2]], num_rows: 1}]}\n\n    iex> Ecto.Adapters.SQL.query_many(MyRepo, \"SELECT $1; SELECT $2;\", [40, 2])\n    {:ok, [%{rows: [[40]], num_rows: 1}, %{rows: [[2]], num_rows: 1}]}","ref":"Soundboard.Repo.html#query_many/3-examples"},{"type":"function","title":"Soundboard.Repo.query_many!/3","doc":"Same as `query_many/4` but returns result directly without `:ok` tuple\nand raises on invalid queries","ref":"Soundboard.Repo.html#query_many!/3"},{"type":"function","title":"Soundboard.Repo.reload/2","doc":"Callback implementation for  Ecto.Repo.reload/2 .","ref":"Soundboard.Repo.html#reload/2"},{"type":"function","title":"Soundboard.Repo.reload!/2","doc":"Callback implementation for  Ecto.Repo.reload!/2 .","ref":"Soundboard.Repo.html#reload!/2"},{"type":"function","title":"Soundboard.Repo.rollback/1","doc":"Callback implementation for  Ecto.Repo.rollback/1 .","ref":"Soundboard.Repo.html#rollback/1"},{"type":"function","title":"Soundboard.Repo.start_link/1","doc":"Callback implementation for  Ecto.Repo.start_link/1 .","ref":"Soundboard.Repo.html#start_link/1"},{"type":"function","title":"Soundboard.Repo.stop/1","doc":"Callback implementation for  Ecto.Repo.stop/1 .","ref":"Soundboard.Repo.html#stop/1"},{"type":"function","title":"Soundboard.Repo.stream/2","doc":"Callback implementation for  Ecto.Repo.stream/2 .","ref":"Soundboard.Repo.html#stream/2"},{"type":"function","title":"Soundboard.Repo.to_sql/2","doc":"Converts the given query to SQL according to its kind and the\nadapter in the given repository.","ref":"Soundboard.Repo.html#to_sql/2"},{"type":"function","title":"Examples - Soundboard.Repo.to_sql/2","doc":"The examples below are meant for reference. Each adapter will\nreturn a different result:\n\n    iex> MyRepo.to_sql(:all, Post)\n    {\"SELECT p.id, p.title, p.inserted_at, p.created_at FROM posts as p\", []}\n\n    iex> MyRepo.to_sql(:update_all, from(p in Post, update: [set: [title: ^\"hello\"]]))\n    {\"UPDATE posts AS p SET title = $1\", [\"hello\"]}\n\n    iex> Ecto.Adapters.SQL.to_sql(:all, MyRepo, Post)\n    {\"SELECT p.id, p.title, p.inserted_at, p.created_at FROM posts as p\", []}","ref":"Soundboard.Repo.html#to_sql/2-examples"},{"type":"function","title":"Soundboard.Repo.transact/2","doc":"Callback implementation for  Ecto.Repo.transact/2 .","ref":"Soundboard.Repo.html#transact/2"},{"type":"function","title":"Soundboard.Repo.transaction/2","doc":"Callback implementation for  Ecto.Repo.transaction/2 .","ref":"Soundboard.Repo.html#transaction/2"},{"type":"function","title":"Soundboard.Repo.update/2","doc":"Callback implementation for  Ecto.Repo.update/2 .","ref":"Soundboard.Repo.html#update/2"},{"type":"function","title":"Soundboard.Repo.update!/2","doc":"Callback implementation for  Ecto.Repo.update!/2 .","ref":"Soundboard.Repo.html#update!/2"},{"type":"function","title":"Soundboard.Repo.update_all/3","doc":"Callback implementation for  Ecto.Repo.update_all/3 .","ref":"Soundboard.Repo.html#update_all/3"},{"type":"module","title":"Soundboard.Sound","doc":"The Sound module.","ref":"Soundboard.Sound.html"},{"type":"function","title":"Soundboard.Sound.by_tag/2","doc":"","ref":"Soundboard.Sound.html#by_tag/2"},{"type":"function","title":"Soundboard.Sound.changeset/2","doc":"","ref":"Soundboard.Sound.html#changeset/2"},{"type":"function","title":"Soundboard.Sound.get_recent_uploads/1","doc":"","ref":"Soundboard.Sound.html#get_recent_uploads/1"},{"type":"function","title":"Soundboard.Sound.get_sound!/1","doc":"","ref":"Soundboard.Sound.html#get_sound!/1"},{"type":"function","title":"Soundboard.Sound.get_sound_id/1","doc":"","ref":"Soundboard.Sound.html#get_sound_id/1"},{"type":"function","title":"Soundboard.Sound.get_user_join_sound/1","doc":"","ref":"Soundboard.Sound.html#get_user_join_sound/1"},{"type":"function","title":"Soundboard.Sound.get_user_leave_sound/1","doc":"","ref":"Soundboard.Sound.html#get_user_leave_sound/1"},{"type":"function","title":"Soundboard.Sound.get_user_sounds_by_discord_id/1","doc":"","ref":"Soundboard.Sound.html#get_user_sounds_by_discord_id/1"},{"type":"function","title":"Soundboard.Sound.list_files/0","doc":"","ref":"Soundboard.Sound.html#list_files/0"},{"type":"function","title":"Soundboard.Sound.update_sound/2","doc":"","ref":"Soundboard.Sound.html#update_sound/2"},{"type":"function","title":"Soundboard.Sound.with_tags/1","doc":"","ref":"Soundboard.Sound.html#with_tags/1"},{"type":"module","title":"Soundboard.SoundTag","doc":"The SoundTag module.","ref":"Soundboard.SoundTag.html"},{"type":"function","title":"Soundboard.SoundTag.changeset/2","doc":"","ref":"Soundboard.SoundTag.html#changeset/2"},{"type":"module","title":"Soundboard.Stats","doc":"Handles the stats of the soundboard.","ref":"Soundboard.Stats.html"},{"type":"function","title":"Soundboard.Stats.broadcast_stats_update/0","doc":"","ref":"Soundboard.Stats.html#broadcast_stats_update/0"},{"type":"function","title":"Soundboard.Stats.get_recent_plays/1","doc":"","ref":"Soundboard.Stats.html#get_recent_plays/1"},{"type":"function","title":"Soundboard.Stats.get_top_sounds/3","doc":"","ref":"Soundboard.Stats.html#get_top_sounds/3"},{"type":"function","title":"Soundboard.Stats.get_top_users/3","doc":"","ref":"Soundboard.Stats.html#get_top_users/3"},{"type":"function","title":"Soundboard.Stats.reset_weekly_stats/0","doc":"","ref":"Soundboard.Stats.html#reset_weekly_stats/0"},{"type":"function","title":"Soundboard.Stats.track_play/2","doc":"","ref":"Soundboard.Stats.html#track_play/2"},{"type":"module","title":"Soundboard.Stats.Play","doc":"The Play module.","ref":"Soundboard.Stats.Play.html"},{"type":"function","title":"Soundboard.Stats.Play.changeset/2","doc":"","ref":"Soundboard.Stats.Play.html#changeset/2"},{"type":"module","title":"Soundboard.Tag","doc":"The Tag module.","ref":"Soundboard.Tag.html"},{"type":"function","title":"Soundboard.Tag.changeset/2","doc":"","ref":"Soundboard.Tag.html#changeset/2"},{"type":"function","title":"Soundboard.Tag.search/2","doc":"","ref":"Soundboard.Tag.html#search/2"},{"type":"module","title":"Soundboard.UserSoundSetting","doc":"The UserSoundSetting module.","ref":"Soundboard.UserSoundSetting.html"},{"type":"function","title":"Soundboard.UserSoundSetting.changeset/2","doc":"","ref":"Soundboard.UserSoundSetting.html#changeset/2"},{"type":"module","title":"SoundboardWeb","doc":"The entrypoint for defining your web interface, such\nas controllers, components, channels, and so on.\n\nThis can be used in your application as:\n\n    use SoundboardWeb, :controller\n    use SoundboardWeb, :html\n\nThe definitions below will be executed for every controller,\ncomponent, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define additional modules and import\nthose modules here.","ref":"SoundboardWeb.html"},{"type":"macro","title":"SoundboardWeb.__using__/1","doc":"When used, dispatch to the appropriate controller/live_view/etc.","ref":"SoundboardWeb.html#__using__/1"},{"type":"function","title":"SoundboardWeb.channel/0","doc":"","ref":"SoundboardWeb.html#channel/0"},{"type":"function","title":"SoundboardWeb.controller/0","doc":"","ref":"SoundboardWeb.html#controller/0"},{"type":"function","title":"SoundboardWeb.html/0","doc":"","ref":"SoundboardWeb.html#html/0"},{"type":"function","title":"SoundboardWeb.live_component/0","doc":"","ref":"SoundboardWeb.html#live_component/0"},{"type":"function","title":"SoundboardWeb.live_view/0","doc":"","ref":"SoundboardWeb.html#live_view/0"},{"type":"function","title":"SoundboardWeb.router/0","doc":"","ref":"SoundboardWeb.html#router/0"},{"type":"function","title":"SoundboardWeb.static_paths/0","doc":"","ref":"SoundboardWeb.html#static_paths/0"},{"type":"function","title":"SoundboardWeb.verified_routes/0","doc":"","ref":"SoundboardWeb.html#verified_routes/0"},{"type":"module","title":"SoundboardWeb.API.SoundController","doc":"","ref":"SoundboardWeb.API.SoundController.html"},{"type":"function","title":"SoundboardWeb.API.SoundController.index/2","doc":"","ref":"SoundboardWeb.API.SoundController.html#index/2"},{"type":"function","title":"SoundboardWeb.API.SoundController.play/2","doc":"","ref":"SoundboardWeb.API.SoundController.html#play/2"},{"type":"function","title":"SoundboardWeb.API.SoundController.stop/2","doc":"","ref":"SoundboardWeb.API.SoundController.html#stop/2"},{"type":"module","title":"SoundboardWeb.AudioPlayer","doc":"Handles the audio playback.","ref":"SoundboardWeb.AudioPlayer.html"},{"type":"function","title":"SoundboardWeb.AudioPlayer.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"SoundboardWeb.AudioPlayer.html#child_spec/1"},{"type":"function","title":"SoundboardWeb.AudioPlayer.current_voice_channel/0","doc":"","ref":"SoundboardWeb.AudioPlayer.html#current_voice_channel/0"},{"type":"function","title":"SoundboardWeb.AudioPlayer.play_sound/2","doc":"","ref":"SoundboardWeb.AudioPlayer.html#play_sound/2"},{"type":"function","title":"SoundboardWeb.AudioPlayer.set_voice_channel/2","doc":"","ref":"SoundboardWeb.AudioPlayer.html#set_voice_channel/2"},{"type":"function","title":"SoundboardWeb.AudioPlayer.start_link/1","doc":"","ref":"SoundboardWeb.AudioPlayer.html#start_link/1"},{"type":"function","title":"SoundboardWeb.AudioPlayer.stop_sound/0","doc":"","ref":"SoundboardWeb.AudioPlayer.html#stop_sound/0"},{"type":"module","title":"SoundboardWeb.AudioPlayer.State","doc":"The state of the audio player.","ref":"SoundboardWeb.AudioPlayer.State.html"},{"type":"module","title":"SoundboardWeb.AuthController","doc":"","ref":"SoundboardWeb.AuthController.html"},{"type":"function","title":"SoundboardWeb.AuthController.callback/2","doc":"","ref":"SoundboardWeb.AuthController.html#callback/2"},{"type":"function","title":"SoundboardWeb.AuthController.debug_session/2","doc":"","ref":"SoundboardWeb.AuthController.html#debug_session/2"},{"type":"function","title":"SoundboardWeb.AuthController.logout/2","doc":"","ref":"SoundboardWeb.AuthController.html#logout/2"},{"type":"function","title":"SoundboardWeb.AuthController.request/2","doc":"","ref":"SoundboardWeb.AuthController.html#request/2"},{"type":"module","title":"SoundboardWeb.Components.FlashComponent","doc":"The flash component.","ref":"SoundboardWeb.Components.FlashComponent.html"},{"type":"function","title":"SoundboardWeb.Components.FlashComponent.flash/1","doc":"","ref":"SoundboardWeb.Components.FlashComponent.html#flash/1"},{"type":"module","title":"SoundboardWeb.Components.Layouts.Navbar","doc":"The navbar component.","ref":"SoundboardWeb.Components.Layouts.Navbar.html"},{"type":"module","title":"SoundboardWeb.Components.Soundboard.DeleteModal","doc":"The delete modal component.","ref":"SoundboardWeb.Components.Soundboard.DeleteModal.html"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.DeleteModal.delete_modal/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.DeleteModal.html#delete_modal/1"},{"type":"module","title":"SoundboardWeb.Components.Soundboard.EditModal","doc":"The edit modal component.","ref":"SoundboardWeb.Components.Soundboard.EditModal.html"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.EditModal.edit_modal/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.EditModal.html#edit_modal/1"},{"type":"module","title":"SoundboardWeb.Components.Soundboard.Helpers","doc":"Helper functions for the soundboard.","ref":"SoundboardWeb.Components.Soundboard.Helpers.html"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.Helpers.format_bytes/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.Helpers.html#format_bytes/1"},{"type":"module","title":"SoundboardWeb.Components.Soundboard.TagComponents","doc":"Shared tag UI helpers for the soundboard modals.","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.TagComponents.tag_badge_list/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html#tag_badge_list/1"},{"type":"function","title":"Attributes - SoundboardWeb.Components.Soundboard.TagComponents.tag_badge_list/1","doc":"* `tags` (`:list`) - Defaults to `[]`.\n* `remove_event` (`:string`) (required)\n* `tag_key` (`:atom`) - Defaults to `:name`.\n* `wrapper_class` (`:string`) - Defaults to `\"mt-2 flex flex-wrap gap-2\"`.","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html#tag_badge_list/1-attributes"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.TagComponents.tag_input_field/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html#tag_input_field/1"},{"type":"function","title":"Attributes - SoundboardWeb.Components.Soundboard.TagComponents.tag_input_field/1","doc":"* `value` (`:string`) - Defaults to `\"\"`.\n* `placeholder` (`:string`) - Defaults to `\"Type a tag and press Enter...\"`.\n* `input_id` (`:string`) - Defaults to `nil`.\n* `disabled` (`:boolean`) - Defaults to `false`.\n* `class` (`:string`) - Defaults to `\"\"`.\n* `onkeydown` (`:string`) - Defaults to `nil`.\n* `autocomplete` (`:string`) - Defaults to `nil`.\n* Global attributes are accepted.","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html#tag_input_field/1-attributes"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.TagComponents.tag_suggestions_dropdown/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html#tag_suggestions_dropdown/1"},{"type":"function","title":"Attributes - SoundboardWeb.Components.Soundboard.TagComponents.tag_suggestions_dropdown/1","doc":"* `tag_input` (`:string`) - Defaults to `\"\"`.\n* `tag_suggestions` (`:list`) - Defaults to `[]`.\n* `select_event` (`:string`) (required)\n* `tag_key` (`:atom`) - Defaults to `:name`.\n* `wrapper_class` (`:string`) - Defaults to `\"absolute z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base overflow-auto focus:outline-none sm:text-sm\"`.\n* `suggestion_class` (`:string`) - Defaults to `\"w-full text-left px-4 py-2 text-sm hover:bg-blue-50 dark:hover:bg-blue-900 dark:text-gray-100\"`.","ref":"SoundboardWeb.Components.Soundboard.TagComponents.html#tag_suggestions_dropdown/1-attributes"},{"type":"module","title":"SoundboardWeb.Components.Soundboard.UploadModal","doc":"The upload modal component.","ref":"SoundboardWeb.Components.Soundboard.UploadModal.html"},{"type":"function","title":"SoundboardWeb.Components.Soundboard.UploadModal.upload_modal/1","doc":"","ref":"SoundboardWeb.Components.Soundboard.UploadModal.html#upload_modal/1"},{"type":"module","title":"SoundboardWeb.CoreComponents","doc":"Provides core UI components.\n\nAt first glance, this module may seem daunting, but its goal is to provide\ncore building blocks for your application, such as modals, tables, and\nforms. The components consist mostly of markup and are well-documented\nwith doc strings and declarative assigns. You may customize and style\nthem in any way you want, based on your application growth and needs.\n\nThe default components use Tailwind CSS, a utility-first CSS framework.\nSee the [Tailwind CSS documentation](https://tailwindcss.com) to learn\nhow to customize them or feel free to swap in another framework altogether.\n\nIcons are provided by [heroicons](https://heroicons.com). See `icon/1` for usage.","ref":"SoundboardWeb.CoreComponents.html"},{"type":"function","title":"SoundboardWeb.CoreComponents.back/1","doc":"Renders a back navigation link.","ref":"SoundboardWeb.CoreComponents.html#back/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.back/1","doc":"<.back navigate={~p\"/posts\"}>Back to posts</.back>","ref":"SoundboardWeb.CoreComponents.html#back/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.back/1","doc":"* `navigate` (`:any`) (required)","ref":"SoundboardWeb.CoreComponents.html#back/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.back/1","doc":"* `inner_block` (required)","ref":"SoundboardWeb.CoreComponents.html#back/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.button/1","doc":"Renders a button.","ref":"SoundboardWeb.CoreComponents.html#button/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.button/1","doc":"<.button>Send!</.button>\n    <.button phx-click=\"go\" class=\"ml-2\">Send!</.button>","ref":"SoundboardWeb.CoreComponents.html#button/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.button/1","doc":"* `type` (`:string`) - Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* Global attributes are accepted. Supports all globals plus: `[\"disabled\", \"form\", \"name\", \"value\"]`.","ref":"SoundboardWeb.CoreComponents.html#button/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.button/1","doc":"* `inner_block` (required)","ref":"SoundboardWeb.CoreComponents.html#button/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.error/1","doc":"Generates a generic error message.","ref":"SoundboardWeb.CoreComponents.html#error/1"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.error/1","doc":"* `inner_block` (required)","ref":"SoundboardWeb.CoreComponents.html#error/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.flash/1","doc":"Renders flash notices.","ref":"SoundboardWeb.CoreComponents.html#flash/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.flash/1","doc":"<.flash kind={:info} flash={@flash} />\n    <.flash kind={:info} phx-mounted={show(\"#flash\")}>Welcome Back!</.flash>","ref":"SoundboardWeb.CoreComponents.html#flash/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.flash/1","doc":"* `id` (`:string`) - the optional id of flash container.\n* `flash` (`:map`) - the map of flash messages to display. Defaults to `%{}`.\n* `title` (`:string`) - Defaults to `nil`.\n* `kind` (`:atom`) - used for styling and flash lookup. Must be one of `:info`, or `:error`.\n* Global attributes are accepted. the arbitrary HTML attributes to add to the flash container.","ref":"SoundboardWeb.CoreComponents.html#flash/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.flash/1","doc":"* `inner_block` - the optional inner block that renders the flash message.","ref":"SoundboardWeb.CoreComponents.html#flash/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.flash_group/1","doc":"Shows the flash group with standard titles and content.","ref":"SoundboardWeb.CoreComponents.html#flash_group/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.flash_group/1","doc":"<.flash_group flash={@flash} />","ref":"SoundboardWeb.CoreComponents.html#flash_group/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.flash_group/1","doc":"* `flash` (`:map`) (required) - the map of flash messages.\n* `id` (`:string`) - the optional id of flash container. Defaults to `\"flash-group\"`.","ref":"SoundboardWeb.CoreComponents.html#flash_group/1-attributes"},{"type":"function","title":"SoundboardWeb.CoreComponents.header/1","doc":"Renders a header with title.","ref":"SoundboardWeb.CoreComponents.html#header/1"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.header/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"SoundboardWeb.CoreComponents.html#header/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.header/1","doc":"* `inner_block` (required)\n* `subtitle`\n* `actions`","ref":"SoundboardWeb.CoreComponents.html#header/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.hide/2","doc":"","ref":"SoundboardWeb.CoreComponents.html#hide/2"},{"type":"function","title":"SoundboardWeb.CoreComponents.hide_modal/2","doc":"","ref":"SoundboardWeb.CoreComponents.html#hide_modal/2"},{"type":"function","title":"SoundboardWeb.CoreComponents.icon/1","doc":"Renders a [Heroicon](https://heroicons.com).\n\nHeroicons come in three styles – outline, solid, and mini.\nBy default, the outline style is used, but solid and mini may\nbe applied by using the `-solid` and `-mini` suffix.\n\nYou can customize the size and colors of the icons by setting\nwidth, height, and background color classes.\n\nIcons are extracted from the `deps/heroicons` directory and bundled within\nyour compiled app.css by the plugin in your `assets/tailwind.config.js`.","ref":"SoundboardWeb.CoreComponents.html#icon/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.icon/1","doc":"<.icon name=\"hero-x-mark-solid\" />\n    <.icon name=\"hero-arrow-path\" class=\"ml-1 w-3 h-3 animate-spin\" />","ref":"SoundboardWeb.CoreComponents.html#icon/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.icon/1","doc":"* `name` (`:string`) (required)\n* `class` (`:string`) - Defaults to `nil`.","ref":"SoundboardWeb.CoreComponents.html#icon/1-attributes"},{"type":"function","title":"SoundboardWeb.CoreComponents.input/1","doc":"Renders an input with label and error messages.\n\nA `Phoenix.HTML.FormField` may be passed as argument,\nwhich is used to retrieve the input name, id, and values.\nOtherwise all attributes may be passed explicitly.","ref":"SoundboardWeb.CoreComponents.html#input/1"},{"type":"function","title":"Types - SoundboardWeb.CoreComponents.input/1","doc":"This function accepts all HTML input types, considering that:\n\n  * You may also set `type=\"select\"` to render a ` ` tag\n\n  * `type=\"checkbox\"` is used exclusively to render boolean values\n\n  * For live file uploads, see `Phoenix.Component.live_file_input/1`\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\nfor more information. Unsupported types, such as hidden and radio,\nare best written directly in your templates.","ref":"SoundboardWeb.CoreComponents.html#input/1-types"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.input/1","doc":"<.input field={@form[:email]} type=\"email\" />\n    <.input name=\"my-input\" errors={[\"oh no!\"]} />","ref":"SoundboardWeb.CoreComponents.html#input/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.input/1","doc":"* `id` (`:any`) - Defaults to `nil`.\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `value` (`:any`)\n* `type` (`:string`) - Defaults to `\"text\"`. Must be one of `\"checkbox\"`, `\"color\"`, `\"date\"`, `\"datetime-local\"`, `\"email\"`, `\"file\"`, `\"month\"`, `\"number\"`, `\"password\"`, `\"range\"`, `\"search\"`, `\"select\"`, `\"tel\"`, `\"text\"`, `\"textarea\"`, `\"time\"`, `\"url\"`, or `\"week\"`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:email].\n* `errors` (`:list`) - Defaults to `[]`.\n* `checked` (`:boolean`) - the checked flag for checkbox inputs.\n* `prompt` (`:string`) - the prompt for select inputs. Defaults to `nil`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `multiple` (`:boolean`) - the multiple flag for select inputs. Defaults to `false`.\n* Global attributes are accepted. Supports all globals plus: `[\"accept\", \"autocomplete\", \"capture\", \"cols\", \"disabled\", \"form\", \"list\", \"max\", \"maxlength\", \"min\", \"minlength\", \"multiple\", \"pattern\", \"placeholder\", \"readonly\", \"required\", \"rows\", \"size\", \"step\"]`.","ref":"SoundboardWeb.CoreComponents.html#input/1-attributes"},{"type":"function","title":"SoundboardWeb.CoreComponents.label/1","doc":"Renders a label.","ref":"SoundboardWeb.CoreComponents.html#label/1"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.label/1","doc":"* `for` (`:string`) - Defaults to `nil`.","ref":"SoundboardWeb.CoreComponents.html#label/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.label/1","doc":"* `inner_block` (required)","ref":"SoundboardWeb.CoreComponents.html#label/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.list/1","doc":"Renders a data list.","ref":"SoundboardWeb.CoreComponents.html#list/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.list/1","doc":"<.list>\n      <:item title=\"Title\">{@post.title}</:item>\n      <:item title=\"Views\">{@post.views}</:item>\n    </.list>","ref":"SoundboardWeb.CoreComponents.html#list/1-examples"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.list/1","doc":"* `item` (required) - Accepts attributes:\n\n  * `title` (`:string`) (required)","ref":"SoundboardWeb.CoreComponents.html#list/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.modal/1","doc":"Renders a modal.","ref":"SoundboardWeb.CoreComponents.html#modal/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.modal/1","doc":"<.modal id=\"confirm-modal\">\n      This is a modal.\n    </.modal>\n\nJS commands may be passed to the `:on_cancel` to configure\nthe closing/cancel event, for example:\n\n    <.modal id=\"confirm\" on_cancel={JS.navigate(~p\"/posts\")}>\n      This is another modal.\n    </.modal>","ref":"SoundboardWeb.CoreComponents.html#modal/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.modal/1","doc":"* `id` (`:string`) (required)\n* `show` (`:boolean`) - Defaults to `false`.\n* `on_cancel` (`Phoenix.LiveView.JS`) - Defaults to `%Phoenix.LiveView.JS{ops: []}`.","ref":"SoundboardWeb.CoreComponents.html#modal/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.modal/1","doc":"* `inner_block` (required)","ref":"SoundboardWeb.CoreComponents.html#modal/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.show/2","doc":"","ref":"SoundboardWeb.CoreComponents.html#show/2"},{"type":"function","title":"SoundboardWeb.CoreComponents.show_modal/2","doc":"","ref":"SoundboardWeb.CoreComponents.html#show_modal/2"},{"type":"function","title":"SoundboardWeb.CoreComponents.simple_form/1","doc":"Renders a simple form.","ref":"SoundboardWeb.CoreComponents.html#simple_form/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.simple_form/1","doc":"<.simple_form for={@form} phx-change=\"validate\" phx-submit=\"save\">\n      <.input field={@form[:email]} label=\"Email\"/>\n      <.input field={@form[:username]} label=\"Username\" />\n      <:actions>\n        <.button>Save</.button>\n      </:actions>\n    </.simple_form>","ref":"SoundboardWeb.CoreComponents.html#simple_form/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.simple_form/1","doc":"* `for` (`:any`) (required) - the data structure for the form.\n* `as` (`:any`) - the server side parameter to collect all input under. Defaults to `nil`.\n* Global attributes are accepted. the arbitrary HTML attributes to apply to the form tag. Supports all globals plus: `[\"autocomplete\", \"name\", \"rel\", \"action\", \"enctype\", \"method\", \"novalidate\", \"target\", \"multipart\"]`.","ref":"SoundboardWeb.CoreComponents.html#simple_form/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.simple_form/1","doc":"* `inner_block` (required)\n* `actions` - the slot for form actions, such as a submit button.","ref":"SoundboardWeb.CoreComponents.html#simple_form/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.table/1","doc":"Renders a table with generic styling.","ref":"SoundboardWeb.CoreComponents.html#table/1"},{"type":"function","title":"Examples - SoundboardWeb.CoreComponents.table/1","doc":"<.table id=\"users\" rows={@users}>\n      <:col :let={user} label=\"id\">{user.id}</:col>\n      <:col :let={user} label=\"username\">{user.username}</:col>\n    </.table>","ref":"SoundboardWeb.CoreComponents.html#table/1-examples"},{"type":"function","title":"Attributes - SoundboardWeb.CoreComponents.table/1","doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"SoundboardWeb.CoreComponents.html#table/1-attributes"},{"type":"function","title":"Slots - SoundboardWeb.CoreComponents.table/1","doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"SoundboardWeb.CoreComponents.html#table/1-slots"},{"type":"function","title":"SoundboardWeb.CoreComponents.translate_error/1","doc":"Translates an error message using gettext.","ref":"SoundboardWeb.CoreComponents.html#translate_error/1"},{"type":"function","title":"SoundboardWeb.CoreComponents.translate_errors/2","doc":"Translates the errors for a field from a keyword list of errors.","ref":"SoundboardWeb.CoreComponents.html#translate_errors/2"},{"type":"module","title":"SoundboardWeb.DiscordHandler","doc":"Handles the Discord events.","ref":"SoundboardWeb.DiscordHandler.html"},{"type":"function","title":"SoundboardWeb.DiscordHandler.get_current_voice_channel/0","doc":"","ref":"SoundboardWeb.DiscordHandler.html#get_current_voice_channel/0"},{"type":"function","title":"SoundboardWeb.DiscordHandler.handle_event/1","doc":"Callback implementation for  Nostrum.Consumer.handle_event/1 .","ref":"SoundboardWeb.DiscordHandler.html#handle_event/1"},{"type":"function","title":"SoundboardWeb.DiscordHandler.handle_info/2","doc":"","ref":"SoundboardWeb.DiscordHandler.html#handle_info/2"},{"type":"function","title":"SoundboardWeb.DiscordHandler.init/0","doc":"","ref":"SoundboardWeb.DiscordHandler.html#init/0"},{"type":"module","title":"SoundboardWeb.DiscordHandler.State","doc":"Handles the state of the Discord handler.","ref":"SoundboardWeb.DiscordHandler.State.html"},{"type":"function","title":"SoundboardWeb.DiscordHandler.State.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"SoundboardWeb.DiscordHandler.State.html#child_spec/1"},{"type":"function","title":"SoundboardWeb.DiscordHandler.State.get_state/1","doc":"","ref":"SoundboardWeb.DiscordHandler.State.html#get_state/1"},{"type":"function","title":"SoundboardWeb.DiscordHandler.State.init/1","doc":"Callback implementation for  GenServer.init/1 .","ref":"SoundboardWeb.DiscordHandler.State.html#init/1"},{"type":"function","title":"SoundboardWeb.DiscordHandler.State.start_link/1","doc":"","ref":"SoundboardWeb.DiscordHandler.State.html#start_link/1"},{"type":"function","title":"SoundboardWeb.DiscordHandler.State.update_state/3","doc":"","ref":"SoundboardWeb.DiscordHandler.State.html#update_state/3"},{"type":"module","title":"SoundboardWeb.Endpoint","doc":"","ref":"SoundboardWeb.Endpoint.html"},{"type":"function","title":"SoundboardWeb.Endpoint.broadcast/3","doc":"Callback implementation for  Phoenix.Endpoint.broadcast/3 .","ref":"SoundboardWeb.Endpoint.html#broadcast/3"},{"type":"function","title":"SoundboardWeb.Endpoint.broadcast!/3","doc":"Callback implementation for  Phoenix.Endpoint.broadcast!/3 .","ref":"SoundboardWeb.Endpoint.html#broadcast!/3"},{"type":"function","title":"SoundboardWeb.Endpoint.broadcast_from/4","doc":"Callback implementation for  Phoenix.Endpoint.broadcast_from/4 .","ref":"SoundboardWeb.Endpoint.html#broadcast_from/4"},{"type":"function","title":"SoundboardWeb.Endpoint.broadcast_from!/4","doc":"Callback implementation for  Phoenix.Endpoint.broadcast_from!/4 .","ref":"SoundboardWeb.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"SoundboardWeb.Endpoint.call/2","doc":"Callback implementation for  Plug.call/2 .","ref":"SoundboardWeb.Endpoint.html#call/2"},{"type":"function","title":"SoundboardWeb.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"SoundboardWeb.Endpoint.html#child_spec/1"},{"type":"function","title":"SoundboardWeb.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"SoundboardWeb.Endpoint.html#config/2"},{"type":"function","title":"SoundboardWeb.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"SoundboardWeb.Endpoint.html#config_change/2"},{"type":"function","title":"SoundboardWeb.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"SoundboardWeb.Endpoint.html#host/0"},{"type":"function","title":"SoundboardWeb.Endpoint.init/1","doc":"Callback implementation for  Plug.init/1 .","ref":"SoundboardWeb.Endpoint.html#init/1"},{"type":"function","title":"SoundboardWeb.Endpoint.local_broadcast/3","doc":"Callback implementation for  Phoenix.Endpoint.local_broadcast/3 .","ref":"SoundboardWeb.Endpoint.html#local_broadcast/3"},{"type":"function","title":"SoundboardWeb.Endpoint.local_broadcast_from/4","doc":"Callback implementation for  Phoenix.Endpoint.local_broadcast_from/4 .","ref":"SoundboardWeb.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"SoundboardWeb.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"SoundboardWeb.Endpoint.html#path/1"},{"type":"function","title":"SoundboardWeb.Endpoint.script_name/0","doc":"Generates the script name.","ref":"SoundboardWeb.Endpoint.html#script_name/0"},{"type":"function","title":"SoundboardWeb.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"SoundboardWeb.Endpoint.html#server_info/1"},{"type":"function","title":"SoundboardWeb.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"SoundboardWeb.Endpoint.html#start_link/1"},{"type":"function","title":"SoundboardWeb.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"SoundboardWeb.Endpoint.html#static_integrity/1"},{"type":"function","title":"SoundboardWeb.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"SoundboardWeb.Endpoint.html#static_lookup/1"},{"type":"function","title":"SoundboardWeb.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"SoundboardWeb.Endpoint.html#static_path/1"},{"type":"function","title":"SoundboardWeb.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"SoundboardWeb.Endpoint.html#static_url/0"},{"type":"function","title":"SoundboardWeb.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"SoundboardWeb.Endpoint.html#struct_url/0"},{"type":"function","title":"SoundboardWeb.Endpoint.subscribe/2","doc":"Callback implementation for  Phoenix.Endpoint.subscribe/2 .","ref":"SoundboardWeb.Endpoint.html#subscribe/2"},{"type":"function","title":"SoundboardWeb.Endpoint.unsubscribe/1","doc":"Callback implementation for  Phoenix.Endpoint.unsubscribe/1 .","ref":"SoundboardWeb.Endpoint.html#unsubscribe/1"},{"type":"function","title":"SoundboardWeb.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"SoundboardWeb.Endpoint.html#url/0"},{"type":"module","title":"SoundboardWeb.ErrorHTML","doc":"This module is invoked by your endpoint in case of errors on HTML requests.\n\nSee config/config.exs.","ref":"SoundboardWeb.ErrorHTML.html"},{"type":"function","title":"SoundboardWeb.ErrorHTML.render/2","doc":"","ref":"SoundboardWeb.ErrorHTML.html#render/2"},{"type":"module","title":"SoundboardWeb.ErrorJSON","doc":"This module is invoked by your endpoint in case of errors on JSON requests.\n\nSee config/config.exs.","ref":"SoundboardWeb.ErrorJSON.html"},{"type":"function","title":"SoundboardWeb.ErrorJSON.render/2","doc":"","ref":"SoundboardWeb.ErrorJSON.html#render/2"},{"type":"module","title":"SoundboardWeb.FavoritesLive","doc":"","ref":"SoundboardWeb.FavoritesLive.html"},{"type":"function","title":"SoundboardWeb.FavoritesLive.mount_presence/2","doc":"","ref":"SoundboardWeb.FavoritesLive.html#mount_presence/2"},{"type":"function","title":"SoundboardWeb.FavoritesLive.render/1","doc":"Callback implementation for  Phoenix.LiveView.render/1 .","ref":"SoundboardWeb.FavoritesLive.html#render/1"},{"type":"module","title":"SoundboardWeb.Gettext","doc":"A module providing Internationalization with a gettext-based API.\n\nBy using [Gettext](https://hexdocs.pm/gettext), your module compiles translations\nthat you can use in your application. To use this Gettext backend module,\ncall `use Gettext` and pass it as an option:\n\n    use Gettext, backend: SoundboardWeb.Gettext\n\n    # Simple translation\n    gettext(\"Here is the string to translate\")\n\n    # Plural translation\n    ngettext(\"Here is the string to translate\",\n             \"Here are the strings to translate\",\n             3)\n\n    # Domain-based translation\n    dgettext(\"errors\", \"Here is the error message to translate\")\n\nSee the [Gettext Docs](https://hexdocs.pm/gettext) for detailed usage.","ref":"SoundboardWeb.Gettext.html"},{"type":"function","title":"SoundboardWeb.Gettext.handle_missing_bindings/2","doc":"Callback implementation for  Gettext.Backend.handle_missing_bindings/2 .","ref":"SoundboardWeb.Gettext.html#handle_missing_bindings/2"},{"type":"function","title":"SoundboardWeb.Gettext.handle_missing_plural_translation/7","doc":"Callback implementation for  Gettext.Backend.handle_missing_plural_translation/7 .","ref":"SoundboardWeb.Gettext.html#handle_missing_plural_translation/7"},{"type":"function","title":"SoundboardWeb.Gettext.handle_missing_translation/5","doc":"Callback implementation for  Gettext.Backend.handle_missing_translation/5 .","ref":"SoundboardWeb.Gettext.html#handle_missing_translation/5"},{"type":"module","title":"SoundboardWeb.Layouts","doc":"This module holds different layouts used by your application.\n\nSee the `layouts` directory for all templates available.\nThe \"root\" layout is a skeleton rendered as part of the\napplication router. The \"app\" layout is set as the default\nlayout on both `use SoundboardWeb, :controller` and\n`use SoundboardWeb, :live_view`.","ref":"SoundboardWeb.Layouts.html"},{"type":"function","title":"SoundboardWeb.Layouts.app/1","doc":"","ref":"SoundboardWeb.Layouts.html#app/1"},{"type":"function","title":"SoundboardWeb.Layouts.root/1","doc":"","ref":"SoundboardWeb.Layouts.html#root/1"},{"type":"module","title":"SoundboardWeb.Live.FileFilter","doc":"Filters the files based on the selected tags and search query.","ref":"SoundboardWeb.Live.FileFilter.html"},{"type":"function","title":"SoundboardWeb.Live.FileFilter.filter_files/3","doc":"","ref":"SoundboardWeb.Live.FileFilter.html#filter_files/3"},{"type":"module","title":"SoundboardWeb.Live.FileHandler","doc":"Handles the renaming and deletion of files.","ref":"SoundboardWeb.Live.FileHandler.html"},{"type":"function","title":"SoundboardWeb.Live.FileHandler.delete_file/1","doc":"","ref":"SoundboardWeb.Live.FileHandler.html#delete_file/1"},{"type":"function","title":"SoundboardWeb.Live.FileHandler.load_sound_files/0","doc":"","ref":"SoundboardWeb.Live.FileHandler.html#load_sound_files/0"},{"type":"function","title":"SoundboardWeb.Live.FileHandler.rename_file/3","doc":"","ref":"SoundboardWeb.Live.FileHandler.html#rename_file/3"},{"type":"function","title":"SoundboardWeb.Live.FileHandler.save_upload/3","doc":"","ref":"SoundboardWeb.Live.FileHandler.html#save_upload/3"},{"type":"module","title":"SoundboardWeb.Live.PresenceHandler","doc":"Handles presence tracking for the Soundboard app.","ref":"SoundboardWeb.Live.PresenceHandler.html"},{"type":"function","title":"SoundboardWeb.Live.PresenceHandler.get_presence_count/0","doc":"","ref":"SoundboardWeb.Live.PresenceHandler.html#get_presence_count/0"},{"type":"function","title":"SoundboardWeb.Live.PresenceHandler.get_user_color/1","doc":"","ref":"SoundboardWeb.Live.PresenceHandler.html#get_user_color/1"},{"type":"function","title":"SoundboardWeb.Live.PresenceHandler.handle_presence_diff/2","doc":"","ref":"SoundboardWeb.Live.PresenceHandler.html#handle_presence_diff/2"},{"type":"function","title":"SoundboardWeb.Live.PresenceHandler.init/0","doc":"","ref":"SoundboardWeb.Live.PresenceHandler.html#init/0"},{"type":"function","title":"SoundboardWeb.Live.PresenceHandler.track_presence/2","doc":"","ref":"SoundboardWeb.Live.PresenceHandler.html#track_presence/2"},{"type":"module","title":"SoundboardWeb.Live.PresenceLive","doc":"","ref":"SoundboardWeb.Live.PresenceLive.html"},{"type":"module","title":"SoundboardWeb.Live.TagHandler","doc":"Handles the adding and removing of tags from sounds.","ref":"SoundboardWeb.Live.TagHandler.html"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.add_tag/3","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#add_tag/3"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.all_tags/1","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#all_tags/1"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.count_sounds_with_tag/2","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#count_sounds_with_tag/2"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.find_or_create_tag/1","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#find_or_create_tag/1"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.list_tags_for_sound/1","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#list_tags_for_sound/1"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.remove_tag/2","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#remove_tag/2"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.search_tags/1","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#search_tags/1"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.tag_selected?/2","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#tag_selected?/2"},{"type":"function","title":"SoundboardWeb.Live.TagHandler.update_sound_tags/2","doc":"","ref":"SoundboardWeb.Live.TagHandler.html#update_sound_tags/2"},{"type":"module","title":"SoundboardWeb.Live.UploadHandler","doc":"Handles the upload of sounds from a local file or a URL.","ref":"SoundboardWeb.Live.UploadHandler.html"},{"type":"function","title":"SoundboardWeb.Live.UploadHandler.handle_upload/3","doc":"","ref":"SoundboardWeb.Live.UploadHandler.html#handle_upload/3"},{"type":"function","title":"SoundboardWeb.Live.UploadHandler.validate_upload/2","doc":"","ref":"SoundboardWeb.Live.UploadHandler.html#validate_upload/2"},{"type":"module","title":"SoundboardWeb.Plugs.APIAuth","doc":"API authentication plug.","ref":"SoundboardWeb.Plugs.APIAuth.html"},{"type":"function","title":"SoundboardWeb.Plugs.APIAuth.call/2","doc":"","ref":"SoundboardWeb.Plugs.APIAuth.html#call/2"},{"type":"function","title":"SoundboardWeb.Plugs.APIAuth.init/1","doc":"","ref":"SoundboardWeb.Plugs.APIAuth.html#init/1"},{"type":"module","title":"SoundboardWeb.Plugs.BasicAuth","doc":"Basic authentication plug.","ref":"SoundboardWeb.Plugs.BasicAuth.html"},{"type":"function","title":"SoundboardWeb.Plugs.BasicAuth.call/2","doc":"","ref":"SoundboardWeb.Plugs.BasicAuth.html#call/2"},{"type":"function","title":"SoundboardWeb.Plugs.BasicAuth.init/1","doc":"","ref":"SoundboardWeb.Plugs.BasicAuth.html#init/1"},{"type":"module","title":"SoundboardWeb.Presence","doc":"The Presence module.","ref":"SoundboardWeb.Presence.html"},{"type":"function","title":"SoundboardWeb.Presence.child_spec/1","doc":"","ref":"SoundboardWeb.Presence.html#child_spec/1"},{"type":"function","title":"SoundboardWeb.Presence.fetch/2","doc":"Callback implementation for  Phoenix.Presence.fetch/2 .","ref":"SoundboardWeb.Presence.html#fetch/2"},{"type":"function","title":"SoundboardWeb.Presence.fetchers_pids/0","doc":"","ref":"SoundboardWeb.Presence.html#fetchers_pids/0"},{"type":"function","title":"SoundboardWeb.Presence.get_by_key/2","doc":"Callback implementation for  Phoenix.Presence.get_by_key/2 .","ref":"SoundboardWeb.Presence.html#get_by_key/2"},{"type":"function","title":"SoundboardWeb.Presence.list/1","doc":"Callback implementation for  Phoenix.Presence.list/1 .","ref":"SoundboardWeb.Presence.html#list/1"},{"type":"function","title":"SoundboardWeb.Presence.track/3","doc":"Callback implementation for  Phoenix.Presence.track/3 .","ref":"SoundboardWeb.Presence.html#track/3"},{"type":"function","title":"SoundboardWeb.Presence.track/4","doc":"Callback implementation for  Phoenix.Presence.track/4 .","ref":"SoundboardWeb.Presence.html#track/4"},{"type":"function","title":"SoundboardWeb.Presence.untrack/2","doc":"Callback implementation for  Phoenix.Presence.untrack/2 .","ref":"SoundboardWeb.Presence.html#untrack/2"},{"type":"function","title":"SoundboardWeb.Presence.untrack/3","doc":"Callback implementation for  Phoenix.Presence.untrack/3 .","ref":"SoundboardWeb.Presence.html#untrack/3"},{"type":"function","title":"SoundboardWeb.Presence.update/3","doc":"Callback implementation for  Phoenix.Presence.update/3 .","ref":"SoundboardWeb.Presence.html#update/3"},{"type":"function","title":"SoundboardWeb.Presence.update/4","doc":"Callback implementation for  Phoenix.Presence.update/4 .","ref":"SoundboardWeb.Presence.html#update/4"},{"type":"module","title":"SoundboardWeb.Router","doc":"","ref":"SoundboardWeb.Router.html"},{"type":"function","title":"SoundboardWeb.Router.api/2","doc":"","ref":"SoundboardWeb.Router.html#api/2"},{"type":"function","title":"SoundboardWeb.Router.auth/2","doc":"","ref":"SoundboardWeb.Router.html#auth/2"},{"type":"function","title":"SoundboardWeb.Router.auth_browser/2","doc":"","ref":"SoundboardWeb.Router.html#auth_browser/2"},{"type":"function","title":"SoundboardWeb.Router.browser/2","doc":"","ref":"SoundboardWeb.Router.html#browser/2"},{"type":"function","title":"SoundboardWeb.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"SoundboardWeb.Router.html#call/2"},{"type":"function","title":"SoundboardWeb.Router.ensure_authenticated_user/2","doc":"","ref":"SoundboardWeb.Router.html#ensure_authenticated_user/2"},{"type":"function","title":"SoundboardWeb.Router.fetch_current_user/2","doc":"","ref":"SoundboardWeb.Router.html#fetch_current_user/2"},{"type":"function","title":"SoundboardWeb.Router.formatted_routes/1","doc":"Callback implementation for  Phoenix.VerifiedRoutes.formatted_routes/1 .","ref":"SoundboardWeb.Router.html#formatted_routes/1"},{"type":"function","title":"SoundboardWeb.Router.init/1","doc":"Callback required by Plug that initializes the router\nfor serving web requests.","ref":"SoundboardWeb.Router.html#init/1"},{"type":"function","title":"SoundboardWeb.Router.require_basic_auth/2","doc":"","ref":"SoundboardWeb.Router.html#require_basic_auth/2"},{"type":"function","title":"SoundboardWeb.Router.verified_route?/2","doc":"Callback implementation for  Phoenix.VerifiedRoutes.verified_route?/2 .","ref":"SoundboardWeb.Router.html#verified_route?/2"},{"type":"module","title":"SoundboardWeb.SettingsLive","doc":"","ref":"SoundboardWeb.SettingsLive.html"},{"type":"function","title":"SoundboardWeb.SettingsLive.mount_presence/2","doc":"","ref":"SoundboardWeb.SettingsLive.html#mount_presence/2"},{"type":"module","title":"SoundboardWeb.SoundHelpers","doc":"Shared helpers for formatting sound metadata for UI rendering.","ref":"SoundboardWeb.SoundHelpers.html"},{"type":"function","title":"SoundboardWeb.SoundHelpers.display_name/1","doc":"","ref":"SoundboardWeb.SoundHelpers.html#display_name/1"},{"type":"function","title":"SoundboardWeb.SoundHelpers.slugify/1","doc":"","ref":"SoundboardWeb.SoundHelpers.html#slugify/1"},{"type":"module","title":"SoundboardWeb.SoundboardLive","doc":"","ref":"SoundboardWeb.SoundboardLive.html"},{"type":"function","title":"SoundboardWeb.SoundboardLive.mount_presence/2","doc":"","ref":"SoundboardWeb.SoundboardLive.html#mount_presence/2"},{"type":"function","title":"SoundboardWeb.SoundboardLive.render/1","doc":"Callback implementation for  Phoenix.LiveView.render/1 .","ref":"SoundboardWeb.SoundboardLive.html#render/1"},{"type":"module","title":"SoundboardWeb.StatsLive","doc":"","ref":"SoundboardWeb.StatsLive.html"},{"type":"function","title":"SoundboardWeb.StatsLive.mount_presence/2","doc":"","ref":"SoundboardWeb.StatsLive.html#mount_presence/2"},{"type":"module","title":"SoundboardWeb.Telemetry","doc":"","ref":"SoundboardWeb.Telemetry.html"},{"type":"function","title":"SoundboardWeb.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"SoundboardWeb.Telemetry.html#child_spec/1"},{"type":"function","title":"SoundboardWeb.Telemetry.metrics/0","doc":"","ref":"SoundboardWeb.Telemetry.html#metrics/0"},{"type":"function","title":"SoundboardWeb.Telemetry.start_link/1","doc":"","ref":"SoundboardWeb.Telemetry.html#start_link/1"},{"type":"module","title":"SoundboardWeb.UploadController","doc":"","ref":"SoundboardWeb.UploadController.html"},{"type":"function","title":"SoundboardWeb.UploadController.show/2","doc":"","ref":"SoundboardWeb.UploadController.html#show/2"}],"content_type":"text/markdown","proglang":"elixir","producer":{"name":"ex_doc","version":"0.38.4"}}